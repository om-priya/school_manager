[
  {
    "iterationFor": "Setting Up Test Enviroment",
    "iterationId": 0,
    "iterationName": "Test SetUp",
    "iterationDescription": "This iteration will setup teacher and principal whose credentials will be used to test other routes. These iteration will be copied every where whenever needed",
    "routes": ["SignUp Principal", "SignUp Teacher"]
  },
  {
    "iterationFor": "SuperAdmin",
    "iterationId": 1,
    "iterationName": "Super Admin Happy Path",
    "iterationDescription": "This iteration will check the happy paths for super admin through which one can check the functionality of super admin",
    "routes": [
      "Login Super Admin",
      "Get All Principal",
      "Get Principal By Id",
      "Approve Principal",
      "Update Principal",
      "Logout Request",
      "Login Principal",
      "Apply For Leave",
      "Logout Request",
      "Login Super Admin",
      "Get All Leaves",
      "Approve Leave",
      "Delete Principal",
      "Logout Request",
      "Tear Down Test Db"
    ]
  },
  {
    "iterationFor": "Principal",
    "iterationInfo": {
      "iterationId": 2,
      "iterationName": "Principal Happy Path",
      "iterationDescription": "This iteration will check the happy paths for principal through which one can check the functionality of principal"
    },
    "routes": [
      "SignUp Teacher",
      "SignUp Principal",
      "Login Super Admin",
      "Get All Principal",
      "Approve Principal",
      "Logout Request",
      "Login Principal",
      "Get All Teachers",
      "Get Single Teacher",
      "Approve Teacher",
      "Update Teacher",
      "Create Event",
      "Fetch All Events",
      "Give Feedback For a Teacher",
      "Fetch All Feedbacks",
      "Apply For Leave",
      "Get All Leaves",
      "Get My Profile",
      "Logout Request",
      "Login Teacher",
      "Raise Issue",
      "Logout Request",
      "Login Principal",
      "Fetch Issues",
      "Delete Teacher",
      "Logout Request",
      "Tear Down Test Db"
    ]
  },
  {
    "iterationFor": "Teacher",
    "iterationInfo": {
      "iterationId": 3,
      "iterationName": "Teacher Happy Path",
      "iterationDescription": "This iteration will check the happy paths for teacher through which one can check the functionality of teacher"
    },
    "routes": [
      "SignUp Teacher",
      "SignUp Principal",
      "Login Super Admin",
      "Get All Principal",
      "Approve Principal",
      "Logout Request",
      "Login Principal",
      "Get All Teachers",
      "Get Single Teacher",
      "Approve Teacher",
      "Give Feedback For a Teacher",
      "Create Event",
      "Logout Request",
      "Login Teacher",
      "Fetch All Feedbacks",
      "Fetch All Events",
      "Apply For Leave",
      "Get All Leaves",
      "Get My Profile",
      "Raise Issue",
      "Logout Request",
      "Tear Down Test Db"
    ]
  },
  {
    "iterationFor": "Missing Token",
    "iterationInfo": {
      "iterationId": 4,
      "iterationName": "Missing Token For Protected Path",
      "iterationDescription": "This iteration will check that bearer token is mandatory to access the endpoint"
    },
    "routes": [
      "Missing Token Get All Principal",
      "Missing Token Get Principal By Id",
      "Missing Token Approve Principal",
      "Missing Token Update Principal",
      "Missing Token Delete Principal",
      "Missing Token Get All Teachers",
      "Missing Token Get Single Teacher",
      "Missing Token Approve Teacher",
      "Missing Token Update Teacher",
      "Missing Token Delete Teacher",
      "Missing Token Create Event",
      "Missing Token Fetch All Events",
      "Missing Token Give Feedback For a Teacher",
      "Missing Token Fetch All Feedbacks",
      "Missing Token Apply For Leave",
      "Missing Token Get All Leaves",
      "Missing Token Approve Leave",
      "Missing Token Get My Profile",
      "Missing Token Change My Password",
      "Missing Token Get Salary History",
      "Missing Token Raise Issue",
      "Missing Token Fetch Issues"
    ]
  },
  {
    "iterationFor": "Access Denied",
    "iterationInfo": {
      "iterationId": 5,
      "iterationName": "Denied Access Based On Roles",
      "iterationDescription": "This iteration will check that bearer token and based on role on that token decide whether that user has access to that endpoint or not"
    },
    "routes": [
      "SignUp Teacher",
      "SignUp Principal",
      "Login Super Admin",
      "Get All Principal",
      "Approve Principal",
      "Logout Request",
      "Login Principal",
      "Get All Teachers",
      "Get Single Teacher",
      "Approve Teacher",
      "Login Super Admin",
      "Denied Access Get All Teachers",
      "Denied Access Get Single Teacher",
      "Denied Access Approve Teacher",
      "Denied Access Update Teacher",
      "Denied Access Delete Teacher",
      "Denied Access Create Event",
      "Denied Access Fetch All Events",
      "Denied Access Give Feedback For a Teacher",
      "Denied Access Fetch All Feedbacks",
      "Denied Access Apply For Leave",
      "Denied Access Get My Profile",
      "Denied Access Change My Password",
      "Denied Access Get Salary History",
      "Denied Access Raise Issue",
      "Denied Access Fetch Issues",
      "Login Principal",
      "Denied Access Get All Principal",
      "Denied Access Get Principal By Id",
      "Denied Access Approve Principal",
      "Denied Access Update Principal",
      "Denied Access Delete Principal",
      "Denied Access Approve Leave",
      "Denied Access Raise Issue",
      "Login Teacher",
      "Denied Access Get All Teachers",
      "Denied Access Get Single Teacher",
      "Denied Access Approve Teacher",
      "Denied Access Update Teacher",
      "Denied Access Delete Teacher",
      "Denied Access Create Event",
      "Denied Access Get All Principal",
      "Denied Access Get Principal By Id",
      "Denied Access Approve Principal",
      "Denied Access Update Principal",
      "Denied Access Delete Principal",
      "Denied Access Approve Leave",
      "Denied Access Give Feedback For a Teacher",
      "Logout Request",
      "Tear Down Test Db"
    ]
  },
  {
    "iterationFor": "Access After Logout",
    "iterationInfo": {
      "iterationId": 6,
      "iterationName": "Accessing Endpoint After Logout",
      "iterationDescription": "This iteration will check the logic of blocklist token"
    },
    "routes": [
      "SignUp Teacher",
      "SignUp Principal",
      "Login Super Admin",
      "Get All Principal",
      "Approve Principal",
      "Logout Request",
      "Login Principal",
      "Get All Teachers",
      "Get Single Teacher",
      "Approve Teacher",
      "Login Super Admin",
      "Logout Request",
      "Denied Access Get All Principal",
      "Denied Access Get Principal By Id",
      "Denied Access Approve Principal",
      "Denied Access Update Principal",
      "Denied Access Delete Principal",
      "Denied Access Approve Leave",
      "Denied Access Raise Issue",
      "Login Principal",
      "Logout Request",
      "Denied Access Get All Teachers",
      "Denied Access Get Single Teacher",
      "Denied Access Approve Teacher",
      "Denied Access Update Teacher",
      "Denied Access Delete Teacher",
      "Denied Access Create Event",
      "Denied Access Fetch All Events",
      "Denied Access Give Feedback For a Teacher",
      "Denied Access Fetch All Feedbacks",
      "Denied Access Apply For Leave",
      "Denied Access Get My Profile",
      "Denied Access Change My Password",
      "Denied Access Get Salary History",
      "Denied Access Raise Issue",
      "Denied Access Fetch Issues",
      "Login Teacher",
      "Logout Request",
      "Denied Access Fetch All Feedbacks",
      "Denied Access Apply For Leave",
      "Denied Access Get My Profile",
      "Denied Access Change My Password",
      "Denied Access Get Salary History",
      "Denied Access Raise Issue",
      "Tear Down Test Db"
    ]
  },
  {
    "iterationFor": "Access After Changing Password",
    "iterationInfo": {
      "iterationId": 7,
      "iterationName": "Accessing Endpoint After Changing Password",
      "iterationDescription": "This iteration will check the logic of changing password"
    },
    "routes": [
      "SignUp Teacher",
      "SignUp Principal",
      "Login Super Admin",
      "Get All Principal",
      "Approve Principal",
      "Logout Request",
      "Login Principal",
      "Get All Teachers",
      "Get Single Teacher",
      "Approve Teacher",
      "Login Principal",
      "Change My Password Principal",
      "Denied Access Get All Teachers",
      "Denied Access Get Single Teacher",
      "Denied Access Approve Teacher",
      "Denied Access Update Teacher",
      "Denied Access Delete Teacher",
      "Denied Access Create Event",
      "Denied Access Fetch All Events",
      "Denied Access Give Feedback For a Teacher",
      "Denied Access Fetch All Feedbacks",
      "Denied Access Apply For Leave",
      "Denied Access Get My Profile",
      "Denied Access Change My Password",
      "Denied Access Get Salary History",
      "Denied Access Raise Issue",
      "Denied Access Fetch Issues",
      "Login Teacher",
      "Change My Password Teacher",
      "Denied Access Fetch All Feedbacks",
      "Denied Access Apply For Leave",
      "Denied Access Get My Profile",
      "Denied Access Change My Password",
      "Denied Access Get Salary History",
      "Denied Access Raise Issue",
      "Tear Down Test Db"
    ]
  },
  {
    "iterationFor": "Some Schema Testing and Tearing Down Test Enviroment",
    "iterationId": 8,
    "iterationName": "Fuzz Testing and Test TearDown",
    "iterationDescription": "This iteration will delete everything from testDb",
    "routes": [
      "SignUp Teacher Invalid Body",
      "SignUp Principal Schema Error",
      "Tear Down Test Db"
    ]
  }
]
